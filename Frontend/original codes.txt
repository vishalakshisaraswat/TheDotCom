//signup
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Account</title>
  <link rel="stylesheet" href="./signup.css">
  <script src="signup.js"></script>

  
</head>
<body>
  <div class="form-container">
    <h1>You're just one click away to find a perfect roommate!</h1>
    <p>Please Create a strong password of length more than 8 and less than 20.</p>
    <form method="post" action="http://localhost:5500/signup">
      <input type="email" name="email" placeholder="Email address" required>
      <input type="password" name="password" placeholder="Create a Strong password" required>
      <button type="submit">Continue</button>
    </form>
    <div class="link">
      <p>Already have an account? <a href="./login.html">Log in</a></p>
    </div>
    <div class="divider">
      <span>OR</span>
    </div>
    <button class="google-btn">
      <img src="https://th.bing.com/th/id/R.0fa3fe04edf6c0202970f2088edea9e7?rik=joOK76LOMJlBPw&riu=http%3a%2f%2fpluspng.com%2fimg-png%2fgoogle-logo-png-open-2000.png&ehk=0PJJlqaIxYmJ9eOIp9mYVPA4KwkGo5Zob552JPltDMw%3d&risl=&pid=ImgRaw&r=0" alt="Google logo">
      Continue with Google
    </button>
  </div>
</body>
</html>

    </div>
</body>
</html>











//login.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login</title>
  <style>
    body {
        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        background-color: #f7f7f7;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        height: 100vh;
    }

    .container {
        width: 100%;
        max-width: 400px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        text-align: center;
    }

    h1 {
        font-size: 24px;
        font-weight: bold;
        color: #333;
    }

    p {
        font-size: 14px;
        color: #555;
        margin-top: 5px;
    }

    form {
        margin-top: 20px;   
    }

    input[type="email"],
    input[type="password"] {
        width: 90%;
        padding: 10px;
        margin: 10px 0;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
    }

    button {
        width: 100%;
        padding: 10px;
        background-color: #0d83fd;
        color: white;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-top: 10px;
    }

    button:hover {
        background-color: #114d8e;
    }

  </style>
</head>
<body>
    <div class="container">
        <h1>Login</h1>
    <form action="http://localhost:5500/login" method="POST">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <br><br>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>
        <br><br>
        <button type="submit">Login</button>
    </form>
    </div>
  
</body>
</html>








//profile.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Profile</title>
  <link rel="stylesheet" type="text/css" href="style.css">
  <script>
    //hiiiiiiiiiiiiiiiiiiiiiiiii
    document.addEventListener('DOMContentLoaded', () => {
      const token = document.cookie.split('; ').find(row => row.startsWith('authToken='))?.split('=')[1];

      if (token) {
        console.log('User is logged in, token:', token);
        
        // Fetch user profile using the token
        fetch('/profile', {
          headers: { Authorization: Bearer ${token} }
        })
        .then(res => res.json())
        .then(data => {
          // Populate profile information dynamically
          document.getElementById('username').innerText = data.profileName;
          document.getElementById('gender').innerText = data.gender;
          document.getElementById('languages').innerText = data.languages.join(', ');
          document.getElementById('address').innerText = data.address;
          document.getElementById('age').innerText = data.age;
          document.getElementById('description').innerText = data.description || 'No description available';
        })
        .catch(err => {
          console.log('Error fetching profile:', err);
        });
      } else {
        // Redirect to login if no token is found
        window.location.href = '/login.html';
      }
    });
  </script>
</head>
<body>

  <h1>Welcome, <span id="profileName">Loading...</span></h1>

  <form id="profile-form">
    <h1>Profile Details</h1>

    <label for="profileName"><h3>Full Name:</h3></label>
    <input type="text" id="profileName" name="profileName" placeholder="Enter your name" required>

    <h3>Select your Gender:</h3>
    <div class="gender-container">
        <label><input type="radio" name="gender" value="Male"> Male</label>
        <label><input type="radio" name="gender" value="Female"> Female</label>
        <label><input type="radio" name="gender" value="Other"> Other</label>
    </div><br>

    <h3>User Type:</h3>
    <label><input type="radio" name="userType" value="roommateSeekerWithRoom"> Roommate Seeker With Room </label>
    <label><input type="radio" name="userType" value="roommateSeekerWithoutRoom"> Roommate Seeker Without Room </label>

    <label for="age"><h3>Age:</h3></label>
    <input type="number" id="age" name="age" placeholder="Enter your age" required>

    <h3>Choose Languages You Are Comfortable With:</h3>
    <label><input type="checkbox" name="languages" value="Hindi"> Hindi</label>
    <label><input type="checkbox" name="languages" value="English"> English</label>
    <label><input type="checkbox" name="languages" value="Other" onclick="toggleOtherLanguage(true)"> Other</label>

    <div id="other-language-container" style="display: none; margin-top: 10px;">
      <label for="other-language">Please specify:</label>
      <textarea id="other-language" name="languages" rows="3" cols="30" placeholder="Enter your preferred language"></textarea>
    </div>

    <label for="address"><h3>Address:</h3></label>
    <input type="text" id="address" name="address" placeholder="Enter your address" required>

    <label for="description"><h3>Description:</h3></label>
    <textarea id="description" name="description" placeholder="Enter a short description" rows="4"></textarea>

    <button type="submit">Submit</button>
  </form>

  <script>
    function toggleOtherLanguage(show) {
      const otherLanguageContainer = document.getElementById('other-language-container');
      otherLanguageContainer.style.display = show ? 'block' : 'none';
    }

    document.getElementById('profile-form').addEventListener('submit', function(event) {
      event.preventDefault();

      const formData = {
        profileName: document.getElementById('profileName').value,
        gender: document.querySelector('input[name="gender"]:checked').value,
        userType: document.querySelector('input[name="userType"]:checked').value,
        age: document.getElementById('age').value,
        address: document.getElementById('address').value,
        description: document.getElementById('description').value,
        languages: Array.from(document.querySelectorAll('input[name="languages"]:checked')).map(input => input.value)
      };

      fetch('/create', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      })
      .then(response => response.json())
      .then(data => {
        alert('Profile submitted successfully!');
      })
      .catch(error => {
        console.error('Error submitting profile:', error);
      });
    });
  </script>

</body>
</html>









//app.js
//to run this code in terminal
//node src/app.js
require('dotenv').config();
const express = require('express');
const connectDB = require('./config/db');
const userRoutes = require('./routes/userRoutes');
const profileRoutes = require('./routes/profileRoutes'); 
const roomRoutes = require('./routes/roomRoutes'); 
const bodyParser = require('body-parser');
const path = require('path');
const cookieParser = require('cookie-parser');


const app = express();
const PORT = 5500;

// Connect to database
connectDB();

// Middleware
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(express.static(path.join(__dirname, '../../Frontend/views')));
app.use(cookieParser());


// Routes
app.use('/', userRoutes);
app.use('/profile', profileRoutes);  
app.use('/rooms', roomRoutes);

// Start server
app.listen(PORT, () => {
  console.log(Server running on http://localhost:${PORT});
});
